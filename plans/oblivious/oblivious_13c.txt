('Finalize Aggregate  (cost=290797.59..290797.60 rows=1 width=96)',)
('  ->  Gather  (cost=290797.36..290797.57 rows=2 width=96)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=289797.36..289797.37 rows=1 width=96)',)
('              ->  Parallel Hash Join  (cost=49583.85..289797.24 rows=17 width=42)',)
('                    Hash Cond: (mi.movie_id = t.id)',)
('                    ->  Hash Join  (cost=2.43..240099.80 rows=30933 width=4)',)
('                          Hash Cond: (mi.info_type_id = it2.id)',)
('                          ->  Parallel Seq Scan on movie_info mi  (cost=0.00..223513.54 rows=6186554 width=8)',)
('                          ->  Hash  (cost=2.41..2.41 rows=1 width=4)',)
('                                ->  Seq Scan on info_type it2  (cost=0.00..2.41 rows=1 width=4)',)
("                                      Filter: ((info)::text = 'release dates'::text)",)
('                    ->  Parallel Hash  (cost=49581.42..49581.42 rows=1 width=54)',)
('                          ->  Nested Loop  (cost=16947.85..49581.42 rows=1 width=54)',)
('                                ->  Parallel Hash Join  (cost=16947.43..49577.40 rows=9 width=39)',)
('                                      Hash Cond: (mc.movie_id = t.id)',)
('                                      ->  Hash Join  (cost=1.06..32610.64 rows=5436 width=8)',)
('                                            Hash Cond: (mc.company_type_id = ct.id)',)
('                                            ->  Parallel Seq Scan on movie_companies mc  (cost=0.00..29695.37 rows=1087137 width=12)',)
('                                            ->  Hash  (cost=1.05..1.05 rows=1 width=4)',)
('                                                  ->  Seq Scan on company_type ct  (cost=0.00..1.05 rows=1 width=4)',)
("                                                        Filter: ((kind)::text = 'production companies'::text)",)
('                                      ->  Parallel Hash  (cost=16946.35..16946.35 rows=1 width=31)',)
('                                            ->  Hash Join  (cost=3.96..16946.35 rows=1 width=31)',)
('                                                  Hash Cond: (t.kind_id = kt.id)',)
('                                                  ->  Nested Loop  (cost=2.86..16945.18 rows=28 width=35)',)
('                                                        ->  Hash Join  (cost=2.43..15261.97 rows=2875 width=10)',)
('                                                              Hash Cond: (miidx.info_type_id = it.id)',)
('                                                              ->  Parallel Seq Scan on movie_info_idx miidx  (cost=0.00..13718.15 rows=575015 width=14)',)
('                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4)',)
('                                                                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4)',)
("                                                                          Filter: ((info)::text = 'rating'::text)",)
('                                                        ->  Index Scan using title_pkey on title t  (cost=0.43..0.59 rows=1 width=25)',)
('                                                              Index Cond: (id = miidx.movie_id)',)
("                                                              Filter: ((title <> ''::text) AND ((title ~~ 'Champion%'::text) OR (title ~~ 'Loser%'::text)))",)
('                                                  ->  Hash  (cost=1.09..1.09 rows=1 width=4)',)
('                                                        ->  Seq Scan on kind_type kt  (cost=0.00..1.09 rows=1 width=4)',)
("                                                              Filter: ((kind)::text = 'movie'::text)",)
('                                ->  Index Scan using company_name_pkey on company_name cn  (cost=0.42..0.45 rows=1 width=23)',)
('                                      Index Cond: (id = mc.company_id)',)
("                                      Filter: ((country_code)::text = '[us]'::text)",)
