('Finalize Aggregate  (cost=545640.83..545640.84 rows=1 width=64)',)
('  ->  Gather  (cost=545640.61..545640.82 rows=2 width=64)',)
('        Workers Planned: 2',)
('        ->  Partial Aggregate  (cost=544640.61..544640.62 rows=1 width=64)',)
('              ->  Nested Loop  (cost=83914.13..544640.61 rows=1 width=32)',)
('                    Join Filter: (t.id = ml.linked_movie_id)',)
('                    ->  Nested Loop  (cost=83912.90..544077.60 rows=1 width=40)',)
('                          ->  Parallel Hash Join  (cost=83912.46..544077.12 rows=1 width=19)',)
('                                Hash Cond: (ci.person_id = n.id)',)
('                                ->  Parallel Seq Scan on cast_info ci  (cost=0.00..403588.82 rows=15086882 width=8)',)
('                                ->  Parallel Hash  (cost=83912.44..83912.44 rows=1 width=27)',)
('                                      ->  Parallel Hash Join  (cost=66518.82..83912.44 rows=1 width=27)',)
('                                            Hash Cond: (an.person_id = n.id)',)
('                                            ->  Parallel Seq Scan on aka_name an  (cost=0.00..15990.49 rows=374165 width=4)',)
("                                                  Filter: (name ~~ '%a%'::text)",)
('                                            ->  Parallel Hash  (cost=66518.81..66518.81 rows=1 width=23)',)
('                                                  ->  Nested Loop  (cost=2.87..66518.81 rows=1 width=23)',)
('                                                        ->  Hash Join  (cost=2.43..66501.97 rows=2 width=4)',)
('                                                              Hash Cond: (pi.info_type_id = it.id)',)
('                                                              ->  Parallel Seq Scan on person_info pi  (cost=0.00..66499.07 rows=173 width=8)',)
("                                                                    Filter: (note = 'Volker Boehm'::text)",)
('                                                              ->  Hash  (cost=2.41..2.41 rows=1 width=4)',)
('                                                                    ->  Seq Scan on info_type it  (cost=0.00..2.41 rows=1 width=4)',)
("                                                                          Filter: ((info)::text = 'mini biography'::text)",)
('                                                        ->  Memoize  (cost=0.44..8.40 rows=1 width=19)',)
('                                                              Cache Key: pi.person_id',)
('                                                              Cache Mode: logical',)
('                                                              ->  Index Scan using name_pkey on name n  (cost=0.43..8.39 rows=1 width=19)',)
('                                                                    Index Cond: (id = pi.person_id)',)
("                                                                    Filter: (((name_pcode_cf)::text ~~ 'D%'::text) AND ((gender)::text = 'm'::text))",)
('                          ->  Memoize  (cost=0.44..0.47 rows=1 width=21)',)
('                                Cache Key: ci.movie_id',)
('                                Cache Mode: logical',)
('                                ->  Index Scan using title_pkey on title t  (cost=0.43..0.46 rows=1 width=21)',)
('                                      Index Cond: (id = ci.movie_id)',)
('                                      Filter: ((production_year >= 1980) AND (production_year <= 1984))',)
('                    ->  Hash Join  (cost=1.24..552.39 rows=849 width=4)',)
('                          Hash Cond: (ml.link_type_id = lt.id)',)
('                          ->  Seq Scan on movie_link ml  (cost=0.00..462.97 rows=29997 width=8)',)
('                          ->  Hash  (cost=1.23..1.23 rows=1 width=4)',)
('                                ->  Seq Scan on link_type lt  (cost=0.00..1.23 rows=1 width=4)',)
("                                      Filter: ((link)::text = 'features'::text)",)
